name: Stop VM
on:
  pull_request_target:
    paths:
      - "Formula/**"
      - "!Formula/patchelf.rb"
      - "!Formula/binutils.rb"
jobs:
  stop_vm:
    runs-on: ubuntu-latest
    steps:
      - name: Wait on SelfHosted test to be done
        uses: lewagon/wait-on-check-action@v0.2
        with:
          ref: ${{github.event.pull_request.head.sha}}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 60
          check-name: tests-self-hosted
      - name: Get self hosted runner name from label
        id: runner-from-label
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: { labels: labels } } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{github.event.inputs.pull_request}}
            })
            const regex = /linux-self-hosted-([0-9]+)/;
            var runner = labels.filter(item => item.name.match(regex))[0].name;
            console.log('Found self-hosted runner: ' + runner);
            return runner;
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Stop VM
        run: gcloud compute instances stop --zone=europe-west1-b ${{steps.runner-from-label.outputs.result}}
      - name: Remove runner label
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: { labels: labels } } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
            github.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ['${{steps.runner-from-label.outputs.result}}']
            })
